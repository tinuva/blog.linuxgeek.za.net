{"version":3,"file":"component---src-pages-posts-index-js-62cffb004e891c61cc13.js","mappings":"4JAGmBA,QAAAA,IAAAA,WAAU,uEAAVA,CAAU,wrCA6J7B,IA3DyB,WAUvB,OACE,2BA8CJ,C,yECzIA,UAfkB,SAAH,OAAMC,EAAI,EAAJA,KAAI,OACvB,gBAAC,IAAM,KACL,gBAAC,IAAS,CACRC,YAAY,MACZC,UAAU,MACVC,eAAe,MACfC,SAAS,MACTC,WAAW,MACXC,qCAAqC,MACrCC,MAAOP,EAAKQ,kBAAkBC,QAEhC,gBAAC,IAAgB,MACV,C","sources":["webpack://blog-david-bezuidenhout/./src/components/TinyLetterSignUp.js","webpack://blog-david-bezuidenhout/./src/pages/posts/index.js"],"sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst TinyLetter = styled.div`\n  display: flex;\n  flex-flow: column wrap;\n  text-align: center;\n  padding: 2rem 1rem;\n  margin: 3rem 0;\n  background-color: #fff;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n\n  form {\n    margin: 0;\n    padding: 0.5rem 1rem;\n  }\n\n  label,\n  input {\n    display: inline-block;\n    width: 100%;\n    margin-bottom: 0.5rem;\n  }\n\n  input[type='text'] {\n    border-radius: 4px;\n    padding: 12px;\n    border: 1px solid #e3e3e3;\n  }\n\n  input[type='submit'] {\n    background-color: #0275d8;\n    border-radius: 4px;\n    padding: 12px;\n    color: #fff;\n    font-weight: 700;\n    border: 1px solid #0275d8;\n    cursor: pointer;\n  }\n\n  input[type='submit']:hover {\n    background-color: #1885e2;\n    border-color: #1885e2;\n  }\n\n  .tinyletter-link {\n    color: #043f71 !important;\n    font-size: 0.75rem;\n    box-shadow: none !important;\n  }\n  .tinyletter-link:hover {\n    border-bottom: 1px solid #043f71;\n  }\n\n  .two {\n    font-size: 0.9rem;\n  }\n\n  .image-wrapper {\n    width: 100%;\n    margin: 0 auto;\n    max-width: 260px;\n    display: block;\n  }\n\n  @media (min-width: 991px) {\n    padding: 2rem 6rem;\n  }\n\n  @media (min-width: 1280px) {\n    display: grid;\n    padding: 2rem 2rem;\n    grid-template-areas:\n      'heading heading heading'\n      'paragraph1 form form'\n      'paragraph2 form form'\n      'tinyletter tinyletter tinyletter';\n\n    .tinyletter__heading {\n      grid-area: heading;\n    }\n\n    p.one {\n      grid-area: paragraph1;\n    }\n\n    p.two {\n      grid-area: paragraph2;\n    }\n\n    form {\n      grid-area: form;\n      min-width: 420px;\n    }\n\n    .tinyletter {\n      grid-area: tinyletter;\n    }\n  }\n`\n\nconst TinyLetterSignup = () => {\n  const handleTinyLetterFormSubmit = () => {\n    window.open(\n      'https://tinyletter.com/fpvtips',\n      'popupwindow',\n      'scrollbars=yes,width=800,height=600'\n    )\n    return true\n  }\n\n  return (\n    <div></div>\n    // <TinyLetter>\n    //   <div className=\"tinyletter__heading\">\n    //     <a\n    //       href=\"https://www.youtube.com/@FPVtips\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       <img src={fpvtipsLogo} alt=\"Fpvtips\" className=\"image-wrapper\" />\n    //     </a>\n    //     <h3>ðŸ“° Monthly Newsletter</h3>\n    //   </div>\n    //   {/* <p className=\"one\">Want to get notified when I drop a new post?</p> */}\n    //   <form\n    //     action=\"https://tinyletter.com/fpvtips\"\n    //     method=\"post\"\n    //     target=\"popupwindow\"\n    //     onSubmit={handleTinyLetterFormSubmit}\n    //   >\n    //     <div>\n    //       <input\n    //         type=\"text\"\n    //         name=\"email\"\n    //         id=\"tlemail\"\n    //         placeholder=\"Email\"\n    //         aria-label=\"email\"\n    //       />\n    //     </div>\n    //     <input type=\"hidden\" value=\"1\" name=\"embed\" />\n    //     <input type=\"submit\" value=\"Subscribe\" />\n    //   </form>\n    //   <p className=\"two\">\n    //     <em>I hate spam, and so I don't spam. Unsubscribe at any time.</em>\n    //   </p>\n    //   <div className=\"tinyletter\">\n    //     <a\n    //       className=\"tinyletter-link\"\n    //       href=\"https://tinyletter.com\"\n    //       rel=\"noopener noreferrer\"\n    //       target=\"_blank\"\n    //     >\n    //       powered by TinyLetter\n    //     </a>\n    //   </div>\n    // </TinyLetter>\n  )\n}\n\nexport default TinyLetterSignup\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../../components/structure/layout'\nimport PostsList from '../../components/PostsList'\nimport TinyLetterSignup from '../../components/TinyLetterSignUp'\n\nconst PostsPage = ({ data }) => (\n  <Layout>\n    <PostsList\n      showChevron=\"yes\"\n      showImage=\"yes\"\n      showCategories=\"yes\"\n      showTags=\"yes\"\n      showSearch=\"yes\"\n      filterCategoriesAndTagsFromURLParams=\"yes\"\n      posts={data.allMarkdownRemark.edges}\n    />\n    <TinyLetterSignup />\n  </Layout>\n)\n\nexport default PostsPage\n\nexport const PostsPageQuery = graphql`\n  query PostsPageQuery {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: {\n        frontmatter: { draft: { ne: true } }\n        fileAbsolutePath: { regex: \"/content/posts/\" }\n      }\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 140)\n          id\n          timeToRead\n          frontmatter {\n            date(formatString: \"MMM DD, YYYY\")\n            path\n            title\n            author\n            category\n            tags\n            ogImage {\n              publicURL\n              childImageSharp {\n                fluid(maxWidth: 672) {\n                  ...GatsbyImageSharpFluid_withWebp\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["styled","data","showChevron","showImage","showCategories","showTags","showSearch","filterCategoriesAndTagsFromURLParams","posts","allMarkdownRemark","edges"],"sourceRoot":""}